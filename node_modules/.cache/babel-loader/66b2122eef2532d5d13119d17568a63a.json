{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiva\\\\Downloads\\\\BookMyConsultationUIF\\\\BookMyConsultationUI\\\\src\\\\screens\\\\appointment\\\\RateAppointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Paper, CardHeader, CardContent, TextField, FormControl, Button, FormHelperText, Typography } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RateAppointment = ({\n  appointment,\n  baseUrl,\n  toggleModalHandler\n}) => {\n  _s();\n\n  const [comments, setComments] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const [ratingRequiredClass, setRatingRequiredClass] = useState(\"none\");\n  const [ratingSubmitted, setRatingSubmitted] = useState(false);\n\n  const ratingChangeHanler = (event, newValue) => {\n    setRating(newValue);\n    setRatingRequiredClass(\"none\");\n  };\n\n  const submitRatingHandler = async () => {\n    if (rating === 0 || rating === null || ratingRequiredClass === \"block\") {\n      setRatingRequiredClass(\"block\");\n      return;\n    } else {\n      setRatingRequiredClass(\"none\");\n    }\n\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    let data = {\n      appointmentId: appointment.appointmentId,\n      doctorId: appointment.doctorId,\n      rating: rating,\n      comments: comments\n    };\n    const url = baseUrl + \"ratings\";\n\n    try {\n      const rawResponse = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\",\n          Authorization: `Bearer ${accessToken}`\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (rawResponse.ok) {\n        setRatingSubmitted(true);\n        setTimeout(function () {\n          toggleModalHandler();\n        }, 1000);\n      }\n\n      if (rawResponse.status === 400) {\n        alert(\"Bad Post Request\");\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"cardHeader\",\n      title: \"Rate an Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-multiline-static\",\n            label: \"Comments\",\n            multiline: true,\n            rows: 4,\n            defaultValue: \"\",\n            onChange: e => setComments(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"span\",\n              className: \"hasTextBlack\",\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              name: appointment.appointmentId,\n              value: rating,\n              onChange: ratingChangeHanler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: ratingRequiredClass,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red\",\n              children: \"Select a rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), ratingSubmitted === true && /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Rating submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: submitRatingHandler,\n          children: \"Rate Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, appointment.appointmentId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RateAppointment, \"s1PkZApiZ9F+crS7FxH2VHrX88o=\");\n\n_c = RateAppointment;\nexport default RateAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"RateAppointment\");","map":{"version":3,"sources":["C:/Users/Shiva/Downloads/BookMyConsultationUIF/BookMyConsultationUI/src/screens/appointment/RateAppointment.js"],"names":["React","useState","Paper","CardHeader","CardContent","TextField","FormControl","Button","FormHelperText","Typography","Rating","RateAppointment","appointment","baseUrl","toggleModalHandler","comments","setComments","rating","setRating","ratingRequiredClass","setRatingRequiredClass","ratingSubmitted","setRatingSubmitted","ratingChangeHanler","event","newValue","submitRatingHandler","accessToken","sessionStorage","getItem","data","appointmentId","doctorId","url","rawResponse","fetch","method","headers","Accept","Authorization","body","JSON","stringify","ok","setTimeout","status","alert","e","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  CardHeader,\r\n  CardContent,\r\n  TextField,\r\n  FormControl,\r\n  Button,\r\n  FormHelperText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\nconst RateAppointment = ({ appointment, baseUrl, toggleModalHandler }) => {\r\n  const [comments, setComments] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n  const [ratingRequiredClass, setRatingRequiredClass] = useState(\"none\");\r\n  const [ratingSubmitted, setRatingSubmitted] = useState(false);\r\n\r\n  const ratingChangeHanler = (event, newValue) => {\r\n    setRating(newValue);\r\n    setRatingRequiredClass(\"none\");\r\n  };\r\n\r\n  const submitRatingHandler = async () => {\r\n    if (rating === 0 || rating === null || ratingRequiredClass === \"block\") {\r\n      setRatingRequiredClass(\"block\");\r\n      return;\r\n    } else {\r\n      setRatingRequiredClass(\"none\");\r\n    }\r\n\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n\r\n    let data = {\r\n      appointmentId: appointment.appointmentId,\r\n      doctorId: appointment.doctorId,\r\n      rating: rating,\r\n      comments: comments,\r\n    };\r\n    const url = baseUrl + \"ratings\";\r\n\r\n    try {\r\n      const rawResponse = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (rawResponse.ok) {\r\n        setRatingSubmitted(true);\r\n        setTimeout(function () {\r\n          toggleModalHandler();\r\n        }, 1000);\r\n      }\r\n      if (rawResponse.status === 400) {\r\n        alert(\"Bad Post Request\");\r\n      }\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <CardHeader className=\"cardHeader\" title=\"Rate an Appointment\" />\r\n      <CardContent key={appointment.appointmentId}>\r\n        <div>\r\n          <FormControl>\r\n            <TextField\r\n              id=\"standard-multiline-static\"\r\n              label=\"Comments\"\r\n              multiline\r\n              rows={4}\r\n              defaultValue=\"\"\r\n              onChange={(e) => setComments(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <FormControl>\r\n            <div>\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"span\"\r\n                className=\"hasTextBlack\"\r\n              >\r\n                Rating:\r\n              </Typography>\r\n\r\n              <Rating\r\n                name={appointment.appointmentId}\r\n                value={rating}\r\n                onChange={ratingChangeHanler}\r\n              />\r\n            </div>\r\n            <FormHelperText className={ratingRequiredClass}>\r\n              <span className=\"red\">Select a rating</span>\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <br />\r\n        {ratingSubmitted === true && (\r\n          <FormControl>\r\n            <span>Rating submitted successfully.</span>\r\n          </FormControl>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={submitRatingHandler}\r\n          >\r\n            Rate Appointment\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RateAppointment;"]},"metadata":{},"sourceType":"module"}