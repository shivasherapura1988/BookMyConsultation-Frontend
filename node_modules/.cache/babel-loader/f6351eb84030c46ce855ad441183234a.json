{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiva\\\\Downloads\\\\BookMyConsultationUIF\\\\BookMyConsultationUI\\\\src\\\\screens\\\\doctorList\\\\DoctorList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Doctor.css\";\nimport { Paper, Typography, Button, Grid, Select, MenuItem } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport Modal from \"react-modal\";\nimport DoctorDetails from \"./DoctorDetails\";\nimport BookAppointment from \"./BookAppointment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(document.getElementById(\"root\"));\nconst detailsModal = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0px\"\n  }\n};\nconst bookingsModal = {\n  content: {\n    width: \"40%\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0px\"\n  }\n};\n\nconst DoctorList = ({\n  baseUrl,\n  getUserAppointments,\n  userAppointments\n}) => {\n  _s();\n\n  const [speciality, setSpeciality] = useState(\"\");\n  const [specialityList, setSpecialityList] = useState([]);\n  const [doctorsList, setDoctorList] = useState([]);\n  const [doctor, setDoctor] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n\n  const getSpeciality = async () => {\n    const url = baseUrl + \"doctors/speciality\";\n\n    try {\n      const rawResponse = await fetch(url);\n\n      if (rawResponse.ok) {\n        const response = await rawResponse.json();\n        await setSpecialityList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some Error Occurred\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const getDoctorsList = async () => {\n    const url = baseUrl + \"doctors\";\n\n    try {\n      const rawResponse = await fetch(url);\n\n      if (rawResponse.ok) {\n        const response = await rawResponse.json();\n        setDoctorList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some Error Occurred\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const getFilteredDoctors = async query => {\n    const url = baseUrl + \"doctors?speciality=\" + encodeURI(query);\n\n    try {\n      const rawResponse = await fetch(url);\n\n      if (rawResponse.ok) {\n        const response = await rawResponse.json();\n        setDoctorList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some Error Occurred\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const changeSpecialityHandler = event => {\n    setSpeciality(event.target.value);\n    getFilteredDoctors(event.target.value);\n  };\n\n  const closeModalHandler = () => {\n    setIsModalOpen(false);\n  };\n\n  useEffect(() => {\n    getDoctorsList();\n    getSpeciality(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: true,\n      container: true,\n      alignItems: \"center\",\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        id: \"selectHeading\",\n        children: \"Select Speciality:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        variant: \"filled\",\n        labelId: \"speciality\",\n        id: \"speciality\",\n        value: speciality,\n        style: {\n          minWidth: \"200px\"\n        },\n        onChange: changeSpecialityHandler,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: \"NONE\"\n        }, \"spec none\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), specialityList.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item,\n          children: item\n        }, \"spec\" + item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), doctorsList.map(doctor => {\n        return /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"elevation\",\n          className: \"doctorListContainer\",\n          elevation: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            gutterBottom: true,\n            children: [\"Doctor Name : \", doctor.firstName, \" \", doctor.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h4\",\n            variant: \"body1\",\n            children: [\"Speciality : \", doctor.speciality]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h4\",\n            variant: \"body1\",\n            children: [\"Rating :\", /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"read-only\",\n              value: doctor.rating,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: \"40%\",\n              margin: \"10px\"\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => {\n              setDoctor(doctor);\n              setModalType(\"bookings\");\n              setIsModalOpen(true);\n            },\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: \"40%\",\n              margin: \"10px\",\n              backgroundColor: \"green\"\n            },\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => {\n              setDoctor(doctor);\n              setModalType(\"details\");\n              setIsModalOpen(true);\n            },\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, doctor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Modal, {\n        ariaHideApp: false,\n        isOpen: isModalOpen,\n        onRequestClose: closeModalHandler,\n        style: modalType === \"details\" ? detailsModal : bookingsModal,\n        children: [modalType === \"details\" && /*#__PURE__*/_jsxDEV(DoctorDetails, {\n          doctor: doctor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 39\n        }, this), modalType === \"bookings\" && /*#__PURE__*/_jsxDEV(BookAppointment, {\n          baseUrl: baseUrl,\n          doctor: doctor,\n          getUserAppointments: getUserAppointments,\n          userAppointments: userAppointments,\n          closeModalHandler: closeModalHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DoctorList, \"s90GVETMbdZ4S9+ebrRCdl6XG9U=\");\n\n_c = DoctorList;\nexport default DoctorList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"sources":["C:/Users/Shiva/Downloads/BookMyConsultationUIF/BookMyConsultationUI/src/screens/doctorList/DoctorList.js"],"names":["React","useState","useEffect","Paper","Typography","Button","Grid","Select","MenuItem","Rating","Modal","DoctorDetails","BookAppointment","setAppElement","document","getElementById","detailsModal","content","top","left","right","bottom","marginRight","transform","padding","bookingsModal","width","DoctorList","baseUrl","getUserAppointments","userAppointments","speciality","setSpeciality","specialityList","setSpecialityList","doctorsList","setDoctorList","doctor","setDoctor","isModalOpen","setIsModalOpen","modalType","setModalType","getSpeciality","url","rawResponse","fetch","ok","response","json","error","Error","message","e","alert","getDoctorsList","getFilteredDoctors","query","encodeURI","changeSpecialityHandler","event","target","value","closeModalHandler","minWidth","map","item","firstName","lastName","rating","margin","backgroundColor","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Doctor.css\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport Modal from \"react-modal\";\r\nimport DoctorDetails from \"./DoctorDetails\";\r\nimport BookAppointment from \"./BookAppointment\";\r\n\r\nModal.setAppElement(document.getElementById(\"root\"));\r\n\r\nconst detailsModal = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    padding: \"0px\",\r\n  },\r\n};\r\nconst bookingsModal = {\r\n  content: {\r\n    width: \"40%\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    padding: \"0px\",\r\n  },\r\n};\r\n\r\nconst DoctorList = ({ baseUrl, getUserAppointments, userAppointments }) => {\r\n  const [speciality, setSpeciality] = useState(\"\");\r\n  const [specialityList, setSpecialityList] = useState([]);\r\n  const [doctorsList, setDoctorList] = useState([]);\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n\r\n  const getSpeciality = async () => {\r\n    const url = baseUrl + \"doctors/speciality\";\r\n\r\n    try {\r\n      const rawResponse = await fetch(url);\r\n\r\n      if (rawResponse.ok) {\r\n        const response = await rawResponse.json();\r\n        await setSpecialityList(response);\r\n      } else {\r\n        const error = new Error();\r\n        error.message = \"Some Error Occurred\";\r\n        throw error;\r\n      }\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  const getDoctorsList = async () => {\r\n    const url = baseUrl + \"doctors\";\r\n\r\n    try {\r\n      const rawResponse = await fetch(url);\r\n\r\n      if (rawResponse.ok) {\r\n        const response = await rawResponse.json();\r\n        setDoctorList(response);\r\n      } else {\r\n        const error = new Error();\r\n        error.message = \"Some Error Occurred\";\r\n        throw error;\r\n      }\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  const getFilteredDoctors = async (query) => {\r\n    const url = baseUrl + \"doctors?speciality=\" + encodeURI(query);\r\n\r\n    try {\r\n      const rawResponse = await fetch(url);\r\n\r\n      if (rawResponse.ok) {\r\n        const response = await rawResponse.json();\r\n        setDoctorList(response);\r\n      } else {\r\n        const error = new Error();\r\n        error.message = \"Some Error Occurred\";\r\n        throw error;\r\n      }\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  const changeSpecialityHandler = (event) => {\r\n    setSpeciality(event.target.value);\r\n    getFilteredDoctors(event.target.value);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDoctorsList();\r\n    getSpeciality();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid item xs={12} sm container alignItems=\"center\" direction=\"column\">\r\n        <Typography component=\"div\" id=\"selectHeading\">\r\n          Select Speciality:\r\n        </Typography>\r\n        <Select\r\n          variant=\"filled\"\r\n          labelId=\"speciality\"\r\n          id=\"speciality\"\r\n          value={speciality}\r\n          style={{ minWidth: \"200px\" }}\r\n          onChange={changeSpecialityHandler}\r\n        >\r\n          <MenuItem key={\"spec none\"} value={\"\"}>\r\n            NONE\r\n          </MenuItem>\r\n          {specialityList.map((item) => (\r\n            <MenuItem key={\"spec\" + item} value={item}>\r\n              {item}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        {doctorsList.map((doctor) => {\r\n          return (\r\n            <Paper\r\n              key={doctor.id}\r\n              variant=\"elevation\"\r\n              className=\"doctorListContainer\"\r\n              elevation={3}\r\n            >\r\n              <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                Doctor Name : {doctor.firstName} {doctor.lastName}\r\n              </Typography>\r\n              <br />\r\n              <Typography component=\"h4\" variant=\"body1\">\r\n                Speciality : {doctor.speciality}\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"body1\">\r\n                Rating :\r\n                <Rating name=\"read-only\" value={doctor.rating} readOnly />\r\n              </Typography>\r\n              <Button\r\n                style={{ width: \"40%\", margin: \"10px\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setDoctor(doctor);\r\n                  setModalType(\"bookings\");\r\n                  setIsModalOpen(true);\r\n                }}\r\n              >\r\n                Book Appointment\r\n              </Button>\r\n              <Button\r\n                style={{\r\n                  width: \"40%\",\r\n                  margin: \"10px\",\r\n                  backgroundColor: \"green\",\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  setDoctor(doctor);\r\n                  setModalType(\"details\");\r\n                  setIsModalOpen(true);\r\n                }}\r\n              >\r\n                View Details\r\n              </Button>\r\n            </Paper>\r\n          );\r\n        })}\r\n        <Modal\r\n          ariaHideApp={false}\r\n          isOpen={isModalOpen}\r\n          onRequestClose={closeModalHandler}\r\n          style={modalType === \"details\" ? detailsModal : bookingsModal}\r\n        >\r\n          {modalType === \"details\" && <DoctorDetails doctor={doctor} />}\r\n          {modalType === \"bookings\" && (\r\n            <BookAppointment\r\n              baseUrl={baseUrl}\r\n              doctor={doctor}\r\n              getUserAppointments={getUserAppointments}\r\n              userAppointments={userAppointments}\r\n              closeModalHandler={closeModalHandler}\r\n            />\r\n          )}\r\n        </Modal>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;"]},"metadata":{},"sourceType":"module"}